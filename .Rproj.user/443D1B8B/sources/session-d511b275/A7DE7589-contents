---
title: "Pilot study manuscript - Composition"
author: "Petri Dish"
date: "2024-10-09"
output: html_document
---

## B) Microbial composition

```{r}
# Set output directory
output_dir<-"out/October24"

# Load functions
source("scripts/functions_pilot_study.R")
```

```{r}
# Load packages
library(tidyverse)
library(patchwork)
library(RColorBrewer)
library(cowplot) #ggdraw
library(Polychrome) #creates palette of colours
library(webshot)
library(kableExtra)
```


### 01. Create abundance tables

#### a) Phylum level
##### - Skin
```{r}
# For each Phylum, Age and Colony
TotalPhylumCounts_skin<-ps1_s %>% 
                        psmelt() %>% 
                        rename("Phylum" = "phylum") %>% 
                        group_by(OTU, Phylum, Age, Colony) %>%   
                        summarise(TotalReads = sum(Abundance)) %>% 
                        arrange(desc(TotalReads)) 

TotalPhylumCounts_Phylum_skin<-TotalPhylumCounts_skin %>% 
                               group_by(Phylum) %>% 
                               summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                               mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), "Body site" = "Skin") %>% 
                               arrange(desc(Abundance))
TotalPhylumCounts_Phylum_skin %>% kbl(caption = "Total counts for each Phylum (Skin") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Skin.html")
#webshot("Total_counts_Phylum_Skin.html", "Total_counts_Phylum_Skin.png", zoom = 2)

# For each Phylum and Age
TotalPhylumCounts_Mums_skin<-TotalPhylumCounts_skin %>% 
                             filter(Age == "Mother") %>%  
                             group_by(Phylum) %>% 
                             summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                             filter(Reads != 0) %>%
                             mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Mother") %>% 
                             arrange(desc(Abundance))
TotalPhylumCounts_Mums_skin %>% select(!Age) %>% kbl(caption = "Total counts for Mothers for each Phylum (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Mums_Skin.html")
#webshot("Total_counts_Phylum_Mums_Skin.html", "Total_counts_Phylum_Mums_Skin.png", zoom = 2)


TotalPhylumCounts_Pups_skin<-TotalPhylumCounts_skin %>% 
                             filter(Age == "Pup") %>%  
                             group_by(Phylum) %>% 
                             summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                             filter(Reads != 0) %>%
                             mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Pup") %>% 
                             arrange(desc(Abundance))
TotalPhylumCounts_Pups_skin %>% select(!Age) %>% kbl(caption = "Total counts for Pups for each Phylum (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Pups_Skin.html")
#webshot("Total_counts_Phylum_Pups_Skin.html", "Total_counts_Phylum_Pups_Skin.png", zoom = 2)

TotalPhylumCounts_Age_skin<-rbind(TotalPhylumCounts_Mums_skin,TotalPhylumCounts_Pups_skin)
TotalPhylumCounts_Age_skin %>% kbl(caption = "Total counts for each Phylum for each Age class (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Age_Skin.html")
#webshot("Total_counts_Phylum_Age_Skin.html", "Total_counts_Phylum_Age_Skin.png", zoom = 2)

# For each Phylum and Colony
TotalPhylumCounts_FWB_skin<-TotalPhylumCounts_skin %>% 
                            filter(Colony == "FWB") %>%  
                            group_by(Phylum) %>% 
                            summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                            filter(Reads != 0) %>%
                            mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "FWB") %>% 
                            arrange(desc(Abundance))
TotalPhylumCounts_FWB_skin %>% select(!Colony) %>% kbl(caption = "Total counts for FWB for each Phylum (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_FWB_Skin.html")
#webshot("Total_counts_Phylum_FWB_Skin.html", "Total_counts_Phylum_FWB_Skin.png", zoom = 2)


TotalPhylumCounts_SSB_skin<-TotalPhylumCounts_skin %>% 
                            filter(Colony == "SSB") %>%  
                            group_by(Phylum) %>% 
                            summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                            filter(Reads != 0) %>%
                            mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "SSB") %>% 
                            arrange(desc(Abundance))
TotalPhylumCounts_SSB_skin %>% select(!Colony) %>% kbl(caption = "Total counts for SSB for each Phylum (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_SSB_Skin.html")
#webshot("Total_counts_Phylum_SSB_Skin.html", "Total_counts_Phylum_SSB_Skin.png", zoom = 2)

TotalPhylumCounts_Colony_skin<-rbind(TotalPhylumCounts_FWB_skin,TotalPhylumCounts_SSB_skin)
TotalPhylumCounts_Colony_skin %>% kbl(caption = "Total counts for each Phylum for each Colony (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Colony_Skin.html")
#webshot("Total_counts_Phylum_Colony_Skin.html", "Total_counts_Phylum_Colony_Skin.png", zoom = 2)
```

##### - Gut
```{r}
# For each Phylum, Age and Colony
TotalPhylumCounts_gut<-ps1_g %>% 
                       psmelt() %>% 
                       rename("Phylum" = "phylum") %>% 
                       group_by(OTU, Phylum, Age, Colony) %>%   
                       summarise(TotalReads = sum(Abundance)) %>% 
                       arrange(desc(TotalReads)) 

TotalPhylumCounts_Phylum_gut<-TotalPhylumCounts_gut %>% 
                              group_by(Phylum) %>% 
                              summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                              mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), "Body site" = "Gut") %>% 
                              arrange(desc(Abundance))
TotalPhylumCounts_Phylum_gut %>% kbl(caption = "Total counts for each Phylum (Gut") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Gut.html")
#webshot("Total_counts_Phylum_Gut.html", "Total_counts_Phylum_Gut.png", zoom = 2)

# For each Phylum and Age
TotalPhylumCounts_Mums_gut<-TotalPhylumCounts_gut %>% 
                            filter(Age == "Mother") %>%  
                            group_by(Phylum) %>% 
                            summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                            filter(Reads != 0) %>%
                            mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Mother") %>% 
                            arrange(desc(Abundance))
TotalPhylumCounts_Mums_gut %>% select(!Age) %>% kbl(caption = "Total counts for Mothers for each Phylum (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Mums_Gut.html")
#webshot("Total_counts_Phylum_Mums_Gut.html", "Total_counts_Phylum_Mums_Gut.png", zoom = 2)


TotalPhylumCounts_Pups_gut<-TotalPhylumCounts_gut %>% 
                            filter(Age == "Pup") %>%  
                            group_by(Phylum) %>% 
                            summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                            filter(Reads != 0) %>%
                            mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Pup") %>% 
                            arrange(desc(Abundance))
TotalPhylumCounts_Pups_gut %>% select(!Age) %>% kbl(caption = "Total counts for Pups for each Phylum (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Pups_Gut.html")
#webshot("Total_counts_Phylum_Pups_Gut.html", "Total_counts_Phylum_Pups_Gut.png", zoom = 2)

TotalPhylumCounts_Age_gut<-rbind(TotalPhylumCounts_Mums_gut,TotalPhylumCounts_Pups_gut)
TotalPhylumCounts_Age_gut %>% kbl(caption = "Total counts for each Phylum for each Age class (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Age_Gut.html")
#webshot("Total_counts_Phylum_Age_Gut.html", "Total_counts_Phylum_Age_Gut.png", zoom = 2)

# For each Phylum and Colony
TotalPhylumCounts_FWB_gut<-TotalPhylumCounts_gut %>% 
                           filter(Colony == "FWB") %>%  
                           group_by(Phylum) %>% 
                           summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                           filter(Reads != 0) %>%
                           mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "FWB") %>% 
                           arrange(desc(Abundance))
TotalPhylumCounts_FWB_gut %>% select(!Colony) %>% kbl(caption = "Total counts for FWB for each Phylum (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria")%>% save_kable(file = "Total_counts_Phylum_FWB_Gut.html")
#webshot("Total_counts_Phylum_FWB_Gut.html", "Total_counts_Phylum_FWB_Gut.png", zoom = 2)


TotalPhylumCounts_SSB_gut<-TotalPhylumCounts_gut %>% 
                           filter(Colony == "SSB") %>%  
                           group_by(Phylum) %>% 
                           summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                           filter(Reads != 0) %>%
                           mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "SSB") %>% 
                           arrange(desc(Abundance))
TotalPhylumCounts_SSB_gut %>% select(!Colony) %>% kbl(caption = "Total counts for SSB for each Phylum (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria")%>% save_kable(file = "Total_counts_Phylum_SSB_Gut.html")
#webshot("Total_counts_Phylum_SSB_Gut.html", "Total_counts_Phylum_SSB_Gut.png", zoom = 2)

TotalPhylumCounts_Colony_gut<-rbind(TotalPhylumCounts_FWB_gut,TotalPhylumCounts_SSB_gut)
TotalPhylumCounts_Colony_gut %>% kbl(caption = "Total counts for each Phylum for each Colony (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_ColonyGut.html")
#webshot("Total_counts_Phylum_ColonyGut.html", "Total_counts_Phylum_ColonyGut.png", zoom = 2)
```


##### - Skin and gut
```{r}
# For each Phylum, Age and Colony
TotalPhylumCounts<-ps1_s_g %>% 
                   psmelt() %>% 
                   rename("Phylum" = "phylum") %>% 
                   group_by(OTU, Phylum, Age, Colony) %>%   
                   summarise(TotalReads = sum(Abundance)) %>% 
                   arrange(desc(TotalReads)) 

TotalPhylumCounts_Phylum<-TotalPhylumCounts %>% 
                          group_by(Phylum) %>% 
                          summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                          mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2)) %>% 
                          arrange(desc(Abundance))
TotalPhylumCounts_Phylum %>% kbl(caption = "Total counts for each Phylum") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_GutAndSkin.html") 

# For each Phylum and Age
TotalPhylumCounts_Mums<-TotalPhylumCounts %>% 
                        filter(Age == "Mother") %>%  
                        group_by(Phylum) %>% 
                        summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                        filter(Reads != 0) %>%
                        mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Mother") %>% 
                        arrange(desc(Abundance))
TotalPhylumCounts_Mums %>% select(!Age) %>% kbl(caption = "Total counts for Mothers for each Phylum") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Mums_GutAndSkin.html")


TotalPhylumCounts_Pups<-TotalPhylumCounts %>% 
                        filter(Age == "Pup") %>%  
                        group_by(Phylum) %>% 
                        summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                        filter(Reads != 0) %>%
                        mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Pup") %>% 
                        arrange(desc(Abundance))
TotalPhylumCounts_Pups %>% select(!Age) %>% kbl(caption = "Total counts for Pups for each Phylum") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Pups_GutAndSkin.html")


TotalPhylumCounts_Age<-rbind(TotalPhylumCounts_Mums,TotalPhylumCounts_Pups)
TotalPhylumCounts_Age %>% kbl(caption = "Total counts for each Phylum for each Age class") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Age_GutAndSkin.html")

# For each Phylum and Colony
TotalPhylumCounts_FWB<-TotalPhylumCounts %>% 
                        filter(Colony == "FWB") %>%  
                        group_by(Phylum) %>% 
                        summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                        filter(Reads != 0) %>%
                        mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "FWB") %>% 
                        arrange(desc(Abundance))
TotalPhylumCounts_FWB %>% select(!Colony) %>% kbl(caption = "Total counts for FWB for each Phylum") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_FWB_GutAndSkin.html")


TotalPhylumCounts_SSB<-TotalPhylumCounts %>% 
                        filter(Colony == "SSB") %>%  
                        group_by(Phylum) %>% 
                        summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                        filter(Reads != 0) %>%
                        mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "SSB") %>% 
                        arrange(desc(Abundance))
TotalPhylumCounts_SSB %>% select(!Colony) %>% kbl(caption = "Total counts for SSB for each Phylum") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_SSB_Phylum_GutAndSkin.html")

TotalPhylumCounts_Colony<-rbind(TotalPhylumCounts_FWB,TotalPhylumCounts_SSB)
TotalPhylumCounts_Colony %>% kbl(caption = "Total counts for each Phylum for each Colony") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Phylum_Colony_GutAndSkin.html")
```

```{r}
# Total phylum counts for skin and gut (same table)
TotalPhylumCounts_skin_gut<-rbind(TotalPhylumCounts_Phylum_skin,TotalPhylumCounts_Phylum_gut)

TotalPhylumCounts_skin_gut %>% filter(Abundance>0) %>% 
   rename("Relative abundance (%)" = Abundance) %>% 
   select(!"Body site") %>% 
   select(1,3,2,4) %>% 
   kbl(caption = "Total counts for each Phylum") %>% 
   kable_classic(full_width = F, html_font = "Cambria") %>% 
   pack_rows("Skin", 1, 24) %>% 
   pack_rows("Gut", 25, 39) %>% 
   save_kable(file = "Total_counts_Phylum_Colony_GutSkin_same-table.html")
```



#### b) Genus level

##### - Skin
```{r}
# For each Genus, Age and Colony
TotalGenusCounts_skin<-ps1_s %>% 
                      psmelt() %>% 
                      rename("Genus"="genus") %>% 
                      group_by(OTU, Genus, Age, Colony) %>%   
                      summarise(TotalReads = sum(Abundance)) %>% 
                      arrange(desc(TotalReads)) 

TotalGenusCounts_Genus_skin<-TotalGenusCounts_skin %>% 
                            group_by(Genus) %>% 
                            summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                            mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), "Body site" = "skin") %>%                 arrange(desc(Abundance)) %>% 
                            filter(Abundance>0.07)

TotalGenusCounts_Genus_skin %>% kbl(caption = "Total counts for each Genus (skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_skin.html")

# For each Genus and Age
TotalGenusCounts_Mums_skin<-TotalGenusCounts_skin %>% 
                           filter(Age == "Mum") %>%  
                           group_by(Genus) %>% 
                           summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                           filter(Reads != 0) %>%
                           mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Mum") %>% 
                           arrange(desc(Abundance))
TotalGenusCounts_Mums_skin %>% select(!Age) %>% kbl(caption = "Total counts for Mothers for each Genus (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Mums_Skin.html")


TotalGenusCounts_Pups_skin<-TotalGenusCounts_skin %>% 
                           filter(Age == "Pup") %>%  
                           group_by(Genus) %>% 
                           summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                           filter(Reads != 0) %>%
                           mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Pup") %>% 
                           arrange(desc(Abundance))
TotalGenusCounts_Pups_skin %>% select(!Age) %>% kbl(caption = "Total counts for Pups for each Genus (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Pups_Skin.html")

TotalGenusCounts_Age_skin<-rbind(TotalGenusCounts_Mums_skin,TotalGenusCounts_Pups_skin)
TotalGenusCounts_Age_skin %>% kbl(caption = "Total counts for each Genus for each Age class (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Age_Skin.html")

# For each Genus and Colony
TotalGenusCounts_FWB_skin<-TotalGenusCounts_skin %>% 
                          filter(Colony == "FWB") %>%  
                          group_by(Genus) %>% 
                          summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                          filter(Reads != 0) %>%
                          mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "FWB") %>% 
                          arrange(desc(Abundance))
TotalGenusCounts_FWB_skin %>% select(!Colony) %>% kbl(caption = "Total counts for FWB for each Genus (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_FWB_Skin.html")

TotalGenusCounts_SSB_skin<-TotalGenusCounts_skin %>% 
                          filter(Colony == "SSB") %>%  
                          group_by(Genus) %>% 
                          summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                          filter(Reads != 0) %>%
                          mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "SSB") %>% 
                          arrange(desc(Abundance))
TotalGenusCounts_SSB_skin %>% select(!Colony) %>% kbl(caption = "Total counts for SSB for each Genus (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_SSB_Skin.html")

TotalGenusCounts_Colony_skin<-rbind(TotalGenusCounts_FWB_skin,TotalGenusCounts_SSB_skin)
TotalGenusCounts_Colony_skin %>% kbl(caption = "Total counts for each Genus for each Colony (Skin)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Colony_Skin.html")
```

##### - Gut
```{r}
# For each Genus, Age and Colony
TotalGenusCounts_gut<-ps1_g %>% 
                      psmelt() %>% 
                      rename("Genus"="genus") %>% 
                      group_by(OTU, Genus, Age, Colony) %>%   
                      summarise(TotalReads = sum(Abundance)) %>% 
                      arrange(desc(TotalReads)) 

TotalGenusCounts_Genus_gut<-TotalGenusCounts_gut %>% 
                            group_by(Genus) %>% 
                            summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                            mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), "Body site" = "Gut") %>%                         arrange(desc(Abundance)) %>% 
                            filter(Abundance>0.07)

TotalGenusCounts_Genus_gut %>% kbl(caption = "Total counts for each Genus (Gut") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Gut.html")

# For each Genus and Age
TotalGenusCounts_Mums_gut<-TotalGenusCounts_gut %>% 
                           filter(Age == "Mum") %>%  
                           group_by(Genus) %>% 
                           summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                           filter(Reads != 0) %>%
                           mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Mum") %>% 
                           arrange(desc(Abundance))
TotalGenusCounts_Mums_gut %>% select(!Age) %>% kbl(caption = "Total counts for Mothers for each Genus (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Mums_Gut.html")

TotalGenusCounts_Pups_gut<-TotalGenusCounts_gut %>% 
                           filter(Age == "Pup") %>%  
                           group_by(Genus) %>% 
                           summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                           filter(Reads != 0) %>%
                           mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Pup") %>% 
                           arrange(desc(Abundance))
TotalGenusCounts_Pups_gut %>% select(!Age) %>% kbl(caption = "Total counts for Pups for each Genus (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Pups_Gut.html")

TotalGenusCounts_Age_gut<-rbind(TotalGenusCounts_Mums_gut,TotalGenusCounts_Pups_gut)
TotalGenusCounts_Age_gut %>% kbl(caption = "Total counts for each Genus for each Age class (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Age_Gut.html")

# For each Genus and Colony
TotalGenusCounts_FWB_gut<-TotalGenusCounts_gut %>% 
                          filter(Colony == "FWB") %>%  
                          group_by(Genus) %>% 
                          summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                          filter(Reads != 0) %>%
                          mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "FWB") %>% 
                          arrange(desc(Abundance))
TotalGenusCounts_FWB_gut %>% select(!Colony) %>% kbl(caption = "Total counts for FWB for each Genus (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_FWB_Gut.html")

TotalGenusCounts_SSB_gut<-TotalGenusCounts_gut %>% 
                          filter(Colony == "SSB") %>%  
                          group_by(Genus) %>% 
                          summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                          filter(Reads != 0) %>%
                          mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "SSB") %>% 
                          arrange(desc(Abundance))
TotalGenusCounts_SSB_gut %>% select(!Colony) %>% kbl(caption = "Total counts for SSB for each Genus (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_SSB_Gut.html")

TotalGenusCounts_Colony_gut<-rbind(TotalGenusCounts_FWB_gut,TotalGenusCounts_SSB_gut)
TotalGenusCounts_Colony_gut %>% kbl(caption = "Total counts for each Genus for each Colony (Gut)") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Colony_Gut.html")
```


##### - Skin and gut
```{r}
# For each Genus, Age and Colony
TotalGenusCounts<-ps1_s_g %>% 
                   psmelt() %>% 
                   rename("Genus"="genus") %>% 
                   group_by(OTU, Genus, Age, Colony) %>%   
                   summarise(TotalReads = sum(Abundance)) %>% 
                   arrange(desc(TotalReads)) 

TotalGenusCounts_Genus<-TotalGenusCounts %>% 
                          group_by(Genus) %>% 
                          summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                          mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2)) %>% 
                          arrange(desc(Abundance))

TotalGenusCounts_Genus %>% kbl(caption = "Total counts for each Genus") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_GutAndSkin.html")

# For each Genus and Age
TotalGenusCounts_Mums<-TotalGenusCounts %>% 
                        filter(Age == "Mum") %>%  
                        group_by(Genus) %>% 
                        summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                        filter(Reads != 0) %>%
                        mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Mum") %>% 
                        arrange(desc(Abundance))
TotalGenusCounts_Mums %>% select(!Age) %>% kbl(caption = "Total counts for Mothers for each Genus") %>% kable_classic(full_width = F, html_font = "Cambria")%>% save_kable(file = "Total_counts_Genus_Mums_GutAndSkin.html")

TotalGenusCounts_Pups<-TotalGenusCounts %>% 
                        filter(Age == "Pup") %>%  
                        group_by(Genus) %>% 
                        summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                        filter(Reads != 0) %>%
                        mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Age = "Pup") %>% 
                        arrange(desc(Abundance))
TotalGenusCounts_Pups %>% select(!Age) %>% kbl(caption = "Total counts for Pups for each Genus") %>% kable_classic(full_width = F, html_font = "Cambria")%>% save_kable(file = "Total_counts_Genus_Pups_GutAndSkin.html")

TotalGenusCounts_Age<-rbind(TotalGenusCounts_Mums,TotalGenusCounts_Pups)
TotalGenusCounts_Age %>% kbl(caption = "Total counts for each Genus for each Age class") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Age_GutAndSkin.html")

# For each Genus and Colony
TotalGenusCounts_FWB<-TotalGenusCounts %>% 
                        filter(Colony == "FWB") %>%  
                        group_by(Genus) %>% 
                        summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                        filter(Reads != 0) %>%
                        mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "FWB") %>% 
                        arrange(desc(Abundance))
TotalGenusCounts_FWB %>% select(!Colony) %>% kbl(caption = "Total counts for FWB for each Genus") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_FWB_GutAndSkin.html")

TotalGenusCounts_SSB<-TotalGenusCounts %>% 
                        filter(Colony == "SSB") %>%  
                        group_by(Genus) %>% 
                        summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>% 
                        filter(Reads != 0) %>%
                        mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2), Colony = "SSB") %>% 
                        arrange(desc(Abundance))
TotalGenusCounts_SSB %>% select(!Colony) %>% kbl(caption = "Total counts for SSB for each Genus") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_SSB_GutAndSkin.html")

TotalGenusCounts_Colony<-rbind(TotalGenusCounts_FWB,TotalGenusCounts_SSB)
TotalGenusCounts_Colony %>% kbl(caption = "Total counts for each Genus for each Colony") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Total_counts_Genus_Colony_GutAndSkin.html")
```

```{r}
# Total genus counts for gut and skin (same table)
TotalGenusCounts_skin_gut<-rbind(TotalGenusCounts_Genus_skin,TotalGenusCounts_Genus_gut)

TotalGenusCounts_skin_gut %>%
  arrange(desc(`Body site`), desc(Abundance)) %>% 
  rename("Relative abundance (%)" = Abundance) %>% 
  select(!"Body site") %>%
  select(1,3,2,4) %>% 
  kbl(caption = "Total counts for each Genus") %>% 
  kable_classic(full_width = F, html_font = "Cambria") %>%
  pack_rows("Skin", 1, 136) %>%
  pack_rows("Gut", 137, 204) %>% 
  save_kable(file = "Total_counts_Genus_Colony_GutSkin_same-table.html")
```

### 02. Calculate the core microbiota
#core microbiota: the ASVs that are present in a certain percentage of the sampled individuals

#### a) Core microbiota in gut or skin

```{r}
# Shared taxa among 90% of the individuals
#ASVs that are present in more than 90% of the samples (n=40), 0.9*40=36 => in more than 36 samples

## skin
prev90_skin_vector<-apply(X = otu_table(ps1_s),
                    MARGIN = 1, 
                    FUN = function(x){sum(x > 0)})

prev90_skin<-data.frame(ASV=row.names(otu_table(ps1_s)),
                        Prevalence = prev90_skin_vector,
                        Abundance = taxa_sums(ps1_s), #taxa_sums = how many reads per ASV
                        tax_table(ps1_s))
row.names(prev90_skin)<-NULL
rm(prev90_skin_vector)

prev90_skin<-prev90_skin %>% filter(Prevalence>0.9*40) %>%
             mutate(Rel_ab = round((Abundance/sum(Abundance))*100, digits = 2)) %>%
             select(ASV, phylum, family, genus, species, Prevalence, Abundance, Rel_ab) %>% 
             arrange(desc(Prevalence)) %>% 
             rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species", "Relative abundance (%)" = "Rel_ab") 

prev90_skin %>% group_by(Phylum) %>% summarise(sum=sum(`Relative abundance (%)`)) %>%  arrange(desc(sum))
prev90_skin %>% group_by(Phylum, Genus) %>% summarise(sum=sum(`Relative abundance (%)`)) %>%  arrange(desc(sum))

prev90_skin %>% kbl(caption = "Core skin microbiota found in 90% of individuals") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_Skin.html")

## gut
prev90_gut_vector<-apply(X = otu_table(ps1_g),
                   MARGIN = 1, #1 on rows, 2 on columns
                   FUN = function(x){sum(x > 0)})
#by rows sum how many times an ASV was found across all samples

## add taxonomy and total read counts
prev90_gut<-data.frame(ASV=row.names(otu_table(ps1_g)),
                       Prevalence = prev90_gut_vector,
                       Abundance = taxa_sums(ps1_g), #taxa_sums = how many reads per ASV
                       tax_table(ps1_g))
row.names(prev90_gut)<-NULL
rm(prev90_gut_vector)

prev90_gut<-prev90_gut %>% filter(Prevalence>0.9*40) %>%
            mutate(Rel_ab = round((Abundance/sum(Abundance))*100, digits = 2)) %>%
            select(ASV, phylum, family, genus, species, Prevalence, Abundance, Rel_ab) %>%         arrange(desc(Prevalence)) %>% 
            rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species", "Relative abundance (%)" = "Rel_ab")
row.names(prev90_gut)<-NULL

prev90_gut %>% kbl(caption = "Core gut microbiota found in 90% of individuals") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_Gut.html")

prev90_gut %>% group_by(Phylum) %>% summarise(sum=sum(`Relative abundance (%)`)) %>%  arrange(desc(sum))
prev90_gut %>% group_by(Phylum,Genus) %>% summarise(sum=sum(`Relative abundance (%)`)) %>%  arrange(desc(sum))
```

#### b) Core microbiota between mothers and pups
```{r}
# Shared taxa among 90% of mums or pups
## mums skin
prev_90_skin_mums_vector <- apply(otu_table(subset_samples(ps1_s, Age == "Mother")), 
                           MARGIN = 1, 
                           FUN = function(x){sum(x > 0)})

prev_90_skin_mums<-data.frame(ASV=row.names(otu_table(subset_samples(ps1_s, Age == "Mother"))),
                             Prevalence = prev_90_skin_mums_vector,
                             Abundance = taxa_sums(subset_samples(ps1_s, Age == "Mother")),
                             tax_table(subset_samples(ps1_s, Age == "Mother")))
row.names(prev_90_skin_mums)<-NULL
rm(prev_90_skin_mums_vector)

prev_90_skin_mums<-prev_90_skin_mums %>% filter(Prevalence>0.9*20) %>%
                  mutate("Abundance (%)"= round((Abundance/sum(Abundance))*100, digits = 2)) %>%
                  select(ASV, phylum, family, genus, species, Prevalence, Abundance, `Abundance (%)`) %>% 
                  rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species") %>% 
                  arrange(desc("Abundance (%)"))

prev_90_skin_mums %>% kbl(caption = "Core skin microbiota found in 90% of the mothers") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_Mums_Skin.html")

## mums gut
prev_90_gut_mums_vector<-apply(otu_table(subset_samples(ps1_g, Age == "Mother")), 
                               MARGIN = 1, 
                               FUN = function(x){sum(x > 0)})

prev_90_gut_mums<-data.frame(ASV=row.names(otu_table(subset_samples(ps1_g, Age == "Mother"))),
                             Prevalence = prev_90_gut_mums_vector,
                             Abundance = taxa_sums(subset_samples(ps1_g, Age == "Mother")),
                             tax_table(subset_samples(ps1_g, Age == "Mother")))
row.names(prev_90_gut_mums)<-NULL
rm(prev_90_gut_mums_vector)

prev_90_gut_mums<-prev_90_gut_mums %>% filter(Prevalence>0.9*20) %>%
                  mutate("Abundance (%)"= round((Abundance/sum(Abundance))*100, digits = 2)) %>%
                  select(ASV, phylum, family, genus, species, Prevalence, Abundance, `Abundance (%)`) %>% 
                  rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species") %>% 
                  arrange(desc("Abundance (%)"))

prev_90_gut_mums %>% kbl(caption = "Core gut microbiota found in 90% of the mothers") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_Mums_Gut.html")
```

```{r}
## pups skin
prev_90_skin_pups_vector <- apply(otu_table(subset_samples(ps1_s, Age == "Pup")), 
                           MARGIN = 1, 
                           FUN = function(x){sum(x > 0)})

prev_90_skin_pups<-data.frame(ASV=row.names(otu_table(subset_samples(ps1_s, Age == "Pup"))),
                             Prevalence = prev_90_skin_pups_vector,
                             Abundance = taxa_sums(subset_samples(ps1_s, Age == "Pup")),
                             tax_table(subset_samples(ps1_s, Age == "Pup")))
row.names(prev_90_skin_pups)<-NULL
rm(prev_90_skin_pups_vector)

prev_90_skin_pups<-prev_90_skin_pups %>% filter(Prevalence>0.9*20) %>%
                  mutate("Abundance (%)"= round((Abundance/sum(Abundance))*100, digits = 2)) %>%
                  select(ASV, phylum, family, genus, species, Prevalence, Abundance, `Abundance (%)`) %>% 
                  rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species") %>% 
                  arrange(desc("Abundance (%)"))

prev_90_skin_pups %>% kbl(caption = "Core skin microbiota found in 90% of the pups") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_Pups_Skin.html")

## pups gut
prev_90_gut_pups_vector <- apply(otu_table(subset_samples(ps1_g, Age == "Pup")), 
                           MARGIN = 1, 
                           FUN = function(x){sum(x > 0)})

prev_90_gut_pups<-data.frame(ASV=row.names(otu_table(subset_samples(ps1_g, Age == "Pup"))),
                             Prevalence = prev_90_gut_pups_vector,
                             Abundance = taxa_sums(subset_samples(ps1_g, Age == "Pup")),
                             tax_table(subset_samples(ps1_g, Age == "Pup")))
row.names(prev_90_gut_pups)<-NULL
rm(prev_90_gut_pups_vector)

prev_90_gut_pups<-prev_90_gut_pups %>% filter(Prevalence>0.9*20) %>%
                  mutate("Abundance (%)"= round((Abundance/sum(Abundance))*100, digits = 2)) %>%
                  select(ASV, phylum, family, genus, species, Prevalence, Abundance, `Abundance (%)`) %>% 
                  rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species") %>% 
                  arrange(desc("Abundance (%)"))

prev_90_gut_pups %>% kbl(caption = "Core gut microbiota found in 90% of the pups") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_Pups_Gut.html")
```

#### c) Core microbiota between FWB and SSB
```{r}
# Shared taxa among 90% of individuals in FWB or SSB
## FWB skin
prev_90_skin_FWB_vector <- apply(otu_table(subset_samples(ps1_s, Colony == "FWB")), 
                           MARGIN = 1, 
                           FUN = function(x){sum(x > 0)})

prev_90_skin_FWB<-data.frame(ASV=row.names(otu_table(subset_samples(ps1_s, Colony == "FWB"))),
                             Prevalence = prev_90_skin_FWB_vector,
                             Abundance = taxa_sums(subset_samples(ps1_s, Colony == "FWB")),
                             tax_table(subset_samples(ps1_s, Colony == "FWB")))
row.names(prev_90_skin_FWB)<-NULL
rm(prev_90_skin_FWB_vector)

prev_90_skin_FWB<-prev_90_skin_FWB %>% filter(Prevalence>0.9*20) %>%
                  mutate("Abundance (%)"= round((Abundance/sum(Abundance))*100, digits = 2)) %>%
                  select(ASV, phylum, family, genus, species, Prevalence, Abundance, `Abundance (%)`) %>% 
                  rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species") %>% 
                  arrange(desc("Abundance (%)"))

prev_90_skin_FWB %>% kbl(caption = "Core skin microbiota found in 90% of samples in FWB") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_FWB_Skin.html")

## FWB gut
prev_90_gut_FWB_vector <- apply(otu_table(subset_samples(ps1_g, Colony == "FWB")), 
                           MARGIN = 1, 
                           FUN = function(x){sum(x > 0)})

prev_90_gut_FWB<-data.frame(ASV=row.names(otu_table(subset_samples(ps1_g, Colony == "FWB"))),
                             Prevalence = prev_90_gut_FWB_vector,
                             Abundance = taxa_sums(subset_samples(ps1_g, Colony == "FWB")),
                             tax_table(subset_samples(ps1_g, Colony == "FWB")))
row.names(prev_90_gut_FWB)<-NULL
rm(prev_90_gut_FWB_vector)

prev_90_gut_FWB<-prev_90_gut_FWB %>% filter(Prevalence>0.9*20) %>%
                  mutate("Abundance (%)"= round((Abundance/sum(Abundance))*100, digits = 2)) %>%
                  select(ASV, phylum, family, genus, species, Prevalence, Abundance, `Abundance (%)`) %>% 
                  rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species") %>% 
                  arrange(desc("Abundance (%)"))

prev_90_gut_FWB %>% kbl(caption = "Core gut microbiota found in 90% of samples in FWB") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_FWB_Gut.html")
```

```{r}
## SSB skin
prev_90_skin_SSB_vector <- apply(otu_table(subset_samples(ps1_s, Colony == "SSB")), 
                           MARGIN = 1, 
                           FUN = function(x){sum(x > 0)})

prev_90_skin_SSB<-data.frame(ASV=row.names(otu_table(subset_samples(ps1_s, Colony == "SSB"))),
                             Prevalence = prev_90_skin_SSB_vector,
                             Abundance = taxa_sums(subset_samples(ps1_s, Colony == "SSB")),
                             tax_table(subset_samples(ps1_s, Colony == "SSB")))
row.names(prev_90_skin_SSB)<-NULL
rm(prev_90_skin_SSB_vector)

prev_90_skin_SSB<-prev_90_skin_SSB %>% filter(Prevalence>0.9*20) %>%
                  mutate("Abundance (%)"= round((Abundance/sum(Abundance))*100, digits = 2)) %>%
                  select(ASV, phylum, family, genus, species, Prevalence, Abundance, `Abundance (%)`) %>% 
                  rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species") %>% 
                  arrange(desc("Abundance (%)"))

prev_90_skin_SSB %>% kbl(caption = "Core skin microbiota found in 90% of samples in SSB") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_SSB_Skin.html")

## SSB gut
prev_90_gut_SSB_vector<-apply(otu_table(subset_samples(ps1_g, Colony == "SSB")), 
                           MARGIN = 1, 
                           FUN = function(x){sum(x > 0)})

prev_90_gut_SSB<-data.frame(ASV=row.names(otu_table(subset_samples(ps1_g, Colony == "SSB"))),
                             Prevalence = prev_90_gut_SSB_vector,
                             Abundance = taxa_sums(subset_samples(ps1_g, Colony == "SSB")),
                             tax_table(subset_samples(ps1_g, Colony == "SSB")))
row.names(prev_90_gut_SSB)<-NULL
rm(prev_90_gut_SSB_vector)

prev_90_gut_SSB<-prev_90_gut_SSB %>% filter(Prevalence>0.9*20) %>%
                  mutate("Abundance (%)"= round((Abundance/sum(Abundance))*100, digits = 2)) %>%
                  select(ASV, phylum, family, genus, species, Prevalence, Abundance, `Abundance (%)`) %>% 
                  rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species") %>% 
                  arrange(desc("Abundance (%)"))


prev_90_gut_SSB %>% kbl(caption = "Core gut microbiota found in 90% of samples in SSB") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_90_SSB_Gut.html")
```

#### d) Taxa found in all samples in both skin and gut
```{r}
# Shared taxa among 100% of individuals for both skin and gut
prev100_skin_gut_vector<-apply(X = otu_table(ps1_s_g),
                         MARGIN = 1, 
                         FUN = function(x){sum(x > 0)})

prev100_skin_gut<-data.frame(ASV=row.names(otu_table(ps1_s_g)),
                             Prevalence = prev100_skin_gut_vector,
                             Abundance = taxa_sums(ps1_s_g), #taxa_sums = how many reads per ASV
                             tax_table(ps1_s_g))
row.names(prev100_skin_gut)<-NULL
rm(prev100_skin_gut_vector)

prev100_skin_gut<-prev100_skin_gut %>% filter(Prevalence==80) %>%
                  mutate("Abundance (%)"= round((Abundance/sum(Abundance))*100, digits = 3)) %>%
                  select(ASV, phylum, family, genus, species, Prevalence, Abundance, `Abundance (%)`) %>% 
                  rename("Phylum" = "phylum", "Genus"="genus","Family"="family", "Species"="species") %>% 
                  arrange(desc("Abundance (%)"))

prev100_skin_gut %>% kbl(caption = "Core skin and gut microbiota found in 100% of individuals") %>% kable_classic(full_width = F, html_font = "Cambria") %>% save_kable(file = "Core_100_GutAndSkin.html")
```

### 03. Create barplots for relative abundance

#### a) Phylum level
```{r}
# Select phyla with more than 1% abundance
plot<-ps1_s_g %>%
      tax_glom(taxrank = "phylum") %>%                     # sisomatonei kapws ta panta sto phylum
      transform_sample_counts(function(x) {x/sum(x)} ) %>% # transform all df to rel. abundance
      psmelt() %>%                                         # create a long df with "Abundance" col
      filter(Abundance > 0.01) %>%                         # filter out low abundance taxa
      mutate(Abundance100 = round(Abundance*100, digits = 2)) %>% 
      arrange(desc(Abundance))                             
```

```{r}
# Plot gut and skin relative abundances
## Get unique phylum levels for gut-skin and ECs
length(unique(plot$phylum)) #15

## Define the colors to use
pal1<-brewer.pal(n = 11, name = "BrBG")
pal1<-replace(pal1, pal1=="#F5F5F5","#a6bddb")
pal2<-brewer.pal(n = 4, name = "PiYG")
pal2<-replace(pal2, pal2=="#4DAC26","#e0f3db")
myColors<-c(pal1, pal2)

## Set the colors with names
names(myColors)<-levels(as.factor(plot$phylum))
names_phylum<-sort(unique(plot$phylum)) #15

# Define the order of pair_ids
pairid_order<-paste0("P",1:20)
plot$Pair_ID<-factor(plot$Pair_ID, levels = pairid_order)

p1<-plot %>% 
  filter(Type_2 == "Skin") %>%
  mutate(phylum = factor(phylum, levels = names_phylum)) %>% 
  ggplot(aes(x = Pair_ID, y = Abundance, fill = phylum)) +      
  facet_grid(Age ~ Colony, scales = "free_x") + 
  geom_bar(stat = "identity", width = 0.9, show.legend = TRUE) +
  theme_classic() +
  ggtitle("A) Skin") +
  theme(strip.background = element_blank(), 
        strip.text.x = element_text(size = 16, vjust = -1.4), 
        strip.text.y = element_blank(),
        axis.line = element_blank(), 
        #axis.text.x = element_text(angle = 90, size=7, vjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 14),
        axis.ticks = element_blank(), 
        axis.title.x = element_blank(), 
        axis.title.y = element_text(size = 18),
        plot.title = element_text(size = 18, vjust = -1), #face = "bold"),
        panel.spacing = unit(0, "lines"),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 16)) +
  scale_fill_manual(values = myColors, name = "Phylum", drop = FALSE) + 
  ylab("Relative abundance")

p2<-plot %>% 
  dplyr::filter(Type_2 == "Gut") %>%
  mutate(Age = dplyr::recode(Age, Mother = "Mothers", Pup = "Pups")) %>% 
  mutate(phylum = factor(phylum, levels = names_phylum)) %>% 
  ggplot(aes(x = Pair_ID, y = Abundance, fill = phylum)) +      
  facet_grid(Age ~ Colony, scales = "free_x") + 
  geom_bar(stat = "identity", width = 0.9, show.legend = TRUE) +
  theme_classic() +
  ggtitle("B) Gut") +
  theme(strip.background = element_blank(), 
        strip.text.x = element_text(size = 16, vjust = -1.4), 
        strip.text.y = element_text(size = 16),
        axis.line = element_blank(), 
        axis.text.x = element_blank(),
        #axis.text.x = element_text(angle = 90, size=7, vjust = 0.5),
        axis.text.y = element_blank(),
        axis.ticks = element_blank(), 
        axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        plot.title = element_text(size = 18, vjust = -1), #face = "bold"),
        panel.spacing = unit(0, "lines"),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 16)) +
  scale_fill_manual(values = myColors, name = "Phylum", drop = FALSE) + 
  ylab("")

# Combine plots with patchwork
combined_plot<-p1 + p2 + plot_layout(guides = "collect")

# Draw x title with some background (otherwise it stays out of margin)
x_title<-ggdraw() + 
           draw_label("Mother-pup pair", size = 18, hjust = 1.1, y = 1.2, fontfamily = "Arial") +
           theme(panel.background = element_rect(fill = "White", color = "White"))

plot_grid(combined_plot, 
          x_title, 
          nrow = 2, 
          rel_heights = c(4, 0.1))

ggsave("Composition_phylum_001_decontam.png", path = output_dir,
        width = 25, height = 17, units = "cm")
```


#### b) Genus level

```{r}
# Select genera with more than 7% abundance
plot_genera<-ps1_s_g %>% 
             tax_glom(taxrank = "genus") %>%                     
             transform_sample_counts(function(x) {x/sum(x)}) %>% 
             psmelt() %>%  
             filter(Abundance > 0.07) %>% 
             mutate(Abundance100 = round(Abundance*100, digits = 2)) %>% 
             arrange(desc(Abundance))  
```

```{r}
# Plot gut and skin
length(unique(plot_genera$genus)) #36

## define the colors to use
myColors_genus<-createPalette(36, c("#FF0000", "#00FF00", "#0000FF"), M=5000)

## Set the colors with names
names(myColors_genus)<-levels(as.factor(plot_genera$genus))
names_genus<-sort(unique(plot_genera$genus)) 

## define the order of pair_ids
plot_genera$Pair_ID<-factor(plot_genera$Pair_ID, levels = pairid_order)

## gut
p1_g<-plot_genera %>% 
  dplyr::filter(Type_2 == "Skin") %>%
  mutate(Age = dplyr::recode(Age, Mother = "Mothers", Pup = "Pups")) %>% 
  mutate(genus = factor(genus, levels = names_genus)) %>% 
  ggplot(aes(x = Pair_ID, y = Abundance, fill = genus)) +      
  facet_grid(Age ~ Colony, scales = "free_x") + 
  geom_bar(stat = "identity", width = 0.9, show.legend = TRUE) +
  theme_classic() +
  ggtitle("A) Skin") +
  theme(strip.background = element_blank(), 
        strip.text.x = element_text(size = 14, vjust = -1.4), 
        strip.text.y = element_blank(),
        axis.line = element_blank(), 
        axis.text.x = element_blank(),
        axis.text.y = element_text(size=14),
        axis.ticks = element_blank(), 
        axis.title.x = element_blank(), 
        axis.title.y = element_text(size = 16),
        plot.title = element_text(size = 16),
        panel.spacing = unit(0, "lines"),
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 14)) +
  scale_fill_manual(values = myColors_genus, name = "Genus", drop = FALSE) + 
  scale_y_continuous(limits = c(0.00,1.00), breaks = seq(0.00,1.00,0.25)) +
  ylab("Relative abundance")

## plot skin
p2_g <- plot_genera %>% 
  dplyr::filter(Type_2 == "Gut") %>%
  mutate(Age = dplyr::recode(Age, Mother = "Mothers", Pup = "Pups")) %>% 
  mutate(genus = factor(genus, levels = names_genus)) %>% 
  ggplot(aes(x = Pair_ID, y = Abundance, fill = genus)) +      
  facet_grid(Age ~ Colony, scales = "free_x") + 
  geom_bar(stat = "identity", width = 0.9, show.legend = TRUE) +
  theme_classic() +
  ggtitle("B) Gut") +
  theme(strip.background = element_blank(), 
        strip.text.x = element_text(size = 14, vjust = -1.4), 
        strip.text.y = element_text(size = 16),
        axis.line = element_blank(), 
        #axis.text.x = element_text(angle = 90, size=14, vjust = 0.5),
        axis.text = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank(), 
        axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        plot.title = element_text(size = 16),
        panel.spacing = unit(0, "lines"),
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 14)) +
  scale_fill_manual(values = myColors_genus, name = "Genus", drop = FALSE) +
  scale_y_continuous(limits = c(0.00,1.00), breaks = seq(0.00,1.00,0.25)) +
  ylab("")

## combine plots with patchwork
p1_g + p2_g + plot_layout(guides = "collect")

ggsave("Composition_genus_007_genus.png", path = output_dir,
       width = 30, height = 15, units = "cm")
```
