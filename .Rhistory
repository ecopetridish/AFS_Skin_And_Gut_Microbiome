geom_bar(stat = "identity", width = 0.9, show.legend = TRUE) +
theme_classic() +
ggtitle("A) Skin") +
theme(strip.background = element_blank(),
strip.text.x = element_text(size = 16, vjust = -1.4),
strip.text.y = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 14),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 18),
plot.title = element_text(size = 18, vjust = -1),
panel.spacing = unit(0, "lines"),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16)) +
scale_fill_manual(values = myColors, name = "Phylum", drop = FALSE) +
ylab("Relative abundance")
p2<-plot %>%
dplyr::filter(Type_2 == "Gut") %>%
mutate(Age = dplyr::recode(Age, Mother = "Mothers", Pup = "Pups")) %>%
mutate(phylum = factor(phylum, levels = phylum_order)) %>%
ggplot(aes(x = Pair_ID, y = Abundance, fill = phylum)) +
facet_grid(Age ~ Colony, scales = "free_x") +
geom_bar(stat = "identity", width = 0.9, show.legend = TRUE) +
theme_classic() +
ggtitle("B) Gut") +
theme(strip.background = element_blank(),
strip.text.x = element_text(size = 16, vjust = -1.4),
strip.text.y = element_text(size = 16),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size = 18, vjust = -1),
panel.spacing = unit(0, "lines"),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16)) +
scale_fill_manual(values = myColors, name = "Phylum", drop = FALSE) +
ylab("")
# Combine plots with patchwork
combined_plot<-p1 + p2 + plot_layout(guides = "collect")
# Draw x title with some background
x_title<-ggdraw() +
draw_label("Mother-pup pair", size = 18, hjust = 1.1, y = 1.2, fontfamily = "Arial") +
theme(panel.background = element_rect(fill = "White", color = "White"))
# Plot it
plot_grid(combined_plot,
x_title,
nrow = 2,
rel_heights = c(4, 0.1))
ggsave("Composition_correct_phylum_001_version_1decontam.png", path = output_dir,
width = 27, height = 17, units = "cm")
ggsave("Composition_correct_phylum_001_version_1decontam.png", path = output_dir,
width = 26, height = 17, units = "cm")
packages()
installed.packages()
# Set output directory
output_dir<-"out"
# Load functions
source("scripts/Functions.R")
# Load packages
library(kableExtra)
library(tidyverse)
library(phyloseq)
library(viridis) #for ggplot - colour blind friendly
library(vegan) #for rarefaction curves, etc
library(scales)
library(decontam)
library(patchwork)
# Load datasets
asv<-read.csv("data/asv.csv",header = T)
taxa<-read.csv("data/taxa.csv",header=T)
meta<-read.csv("data/meta.csv",header=T)
# Fix asv and taxa tables
asv<-asv %>% dplyr::mutate_if(is.integer, as.numeric)
asv[,1]<-paste0("ASV_",seq(1:nrow(asv)))
names(asv)[2:ncol(asv)]<-paste0("S",seq(1:(ncol(asv)-1)))
asv<-asv %>% dplyr::rename("ASV"="X")
taxa[,1]<-paste0("ASV_",seq(1:nrow(taxa)))
taxa<-taxa %>% dplyr::rename("ASV"="X")
# Change phyla names based on updated taxonomy (DOI: 10.1099/ijsem.0.005056)
taxa<-taxa %>%
mutate(phylum = case_when(
phylum == "Actinobacteriota" ~ "Actinomycetota",
phylum == "Firmicutes" ~ "Bacillota",
phylum == "Chloroflexi" ~ "Chloroflexota",
phylum == "Proteobacteria" ~ "Pseudomonadota",
phylum == "Desulfobacterota" ~ "Thermodesulfobacteriota",
TRUE ~ phylum))
# Check if everything went well
taxa %>% distinct(phylum) %>% arrange(phylum)
# Create subsets
## Skin
asv_s<-asv[,c(1:21,42:61)]
meta_s<-meta[meta$Type_2=="Skin",]
## Gut
asv_g<-asv[,c(1,22:41,62:81)]
meta_g<-meta[meta$Type_2=="Gut",]
## Environmental controls
asv_ec<-asv[,c(1,82:ncol(asv))]
meta_ec<-meta[meta$Type_2=="Control",]
# Row names (needed for phyloseq object)
asv_s<-asv_s %>% tibble::column_to_rownames("ASV")
asv_g<-asv_g %>% tibble::column_to_rownames("ASV")
asv_ec<-asv_ec %>% tibble::column_to_rownames("ASV")
taxa<-taxa %>% tibble::column_to_rownames("ASV")
rownames(meta_s)<-meta_s[,1]
saveRDS(meta_s, "data/meta_s.rds")
rownames(meta_g)<-meta_g[,1]
saveRDS(meta_g, "data/meta_g.rds")
rownames(meta_ec)<-meta_ec[,1]
# Convert taxa to matrix (needed for phyloseq)
taxa<-as.matrix(taxa)
saveRDS(taxa, "data/taxa.rds")
# Create phyloseq objects
## Skin
asv_s.obj<-otu_table(asv_s, taxa_are_rows = T)
taxa_s.obj<-tax_table(taxa)
meta_s.obj<-sample_data(meta_s)
ps0_s<-phyloseq(asv_s.obj,taxa_s.obj,meta_s.obj)
## Gut
asv_g.obj<-otu_table(asv_g, taxa_are_rows = T)
taxa_g.obj<-tax_table(taxa)
meta_g.obj<-sample_data(meta_g)
ps0_g<-phyloseq(asv_g.obj,taxa_g.obj,meta_g.obj)
## Environmental controls
asv_ec.obj<-otu_table(asv_ec, taxa_are_rows = T)
taxa_ec.obj<-tax_table(taxa)
samples_ec.obj<-sample_data(meta_ec)
ps0_ec<-phyloseq(asv_ec.obj,taxa_ec.obj,samples_ec.obj)
# Remove ASVs that have no total reads
## Skin
ps0_s<-ps0_s %>% filter_taxa(function(x) sum(x)>0, TRUE)
## Gut
ps0_g<-ps0_g %>% filter_taxa(function(x) sum(x)>0, TRUE)
## Environmental controls
ps0_ec<-ps0_ec %>% filter_taxa(function(x) sum(x)>0, TRUE)
# Create subsets for each body site
ps0s_ec<-merge_phyloseq(ps0_ec, ps0_s)
ps0g_ec<-merge_phyloseq(ps0_ec, ps0_g)
# Create column with F or T if its a negative control or not
## Skin
sample_data(ps0s_ec)$is.neg<-sample_data(ps0s_ec)$Type_2 == "Control"
## Gut
sample_data(ps0g_ec)$is.neg<-sample_data(ps0g_ec)$Type_2 == "Control"
# Identify contaminators
## Skin
contamdf.prev_skin<-isContaminant(ps0s_ec, method="prevalence", neg="is.neg", threshold = 0.1)
## Gut
contamdf.prev_gut<-isContaminant(ps0g_ec, method="prevalence", neg="is.neg", threshold = 0.1)
contamdf.prev_skin #
table(contamdf.prev_skin$contaminant) #TRUE:518
table(contamdf.prev_gut$contaminant) #TRUE:421
View(prev90_skin)
nrow(prev90_skin)
nrow(prev90_gut) #136 ASVs
TotalPhylumCounts_Phylum_gut %>%
kbl(caption = "Total counts for each Phylum (Gut") %>%
kable_classic(full_width = F, html_font = "Cambria")
nrow(TotalPhylumCounts_Phylum_gut)
nrow(TotalPhylumCounts_Phylum_skin)
TotalPhylumCounts_skin_gut %>%
rename("Relative abundance (%)" = Abundance) %>%
select(!"Body site") %>%
select(1,3,2,4) %>%
kbl() %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
pack_rows("Skin", 1, 24) %>%
pack_rows("Gut", 25, 39)
TotalPhylumCounts_Phylum_skin<-readRDS("data/TotalPhylumCounts_Phylum_skin.rds")
TotalPhylumCounts_Phylum_gut<-readRDS("data/TotalPhylumCounts_Phylum_gut.rds")
TotalPhylumCounts_skin_gut<-rbind(TotalPhylumCounts_Phylum_skin,TotalPhylumCounts_Phylum_gut)
TotalPhylumCounts_skin_gut %>%
rename("Relative abundance (%)" = Abundance) %>%
select(!"Body site") %>%
select(1,3,2,4) %>%
kbl() %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
pack_rows("Skin", 1, 24) %>%
pack_rows("Gut", 25, 39)
TotalPhylumCounts_skin<-ps1_s %>%
psmelt() %>%
rename("Phylum" = "phylum") %>%
group_by(OTU, Phylum) %>%
summarise(TotalReads = sum(Abundance)) %>%
arrange(desc(TotalReads))
TotalPhylumCounts_Phylum_skin<-TotalPhylumCounts_skin %>%
group_by(Phylum) %>%
summarise(ASVs = length(unique(OTU)),
Reads = sum(TotalReads)) %>%
mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2),
"Body site" = "Skin") %>%
arrange(desc(Abundance))
nrow(TotalPhylumCounts_Phylum_skin)
saveRDS(TotalPhylumCounts_Phylum_skin, "data/TotalPhylumCounts_Phylum_skin.rds")
TotalPhylumCounts_Phylum_skin %>%
kbl(caption = "Total counts for each Phylum (Skin") %>%
kable_classic(full_width = F, html_font = "Cambria")
TotalPhylumCounts_Phylum_skin<-readRDS("data/TotalPhylumCounts_Phylum_skin.rds")
TotalPhylumCounts_Phylum_gut<-readRDS("data/TotalPhylumCounts_Phylum_gut.rds")
TotalPhylumCounts_skin_gut<-rbind(TotalPhylumCounts_Phylum_skin,TotalPhylumCounts_Phylum_gut)
TotalPhylumCounts_skin_gut %>%
rename("Relative abundance (%)" = Abundance) %>%
select(!"Body site") %>%
select(1,3,2,4) %>%
kbl() %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
pack_rows("Skin", 1, 24) %>%
pack_rows("Gut", 25, 39)
TotalPhylumCounts_skin_gut<-rbind(TotalPhylumCounts_Phylum_skin,TotalPhylumCounts_Phylum_gut)
TotalPhylumCounts_skin_gut
TotalPhylumCounts_skin_gut %>%
arrange(Body_site, Abundance) %>%
rename("Relative abundance (%)" = Abundance) %>%
select(!"Body site") %>%
select(1,3,2,4) %>%
kbl() %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
pack_rows("Skin", 1, 24) %>%
pack_rows("Gut", 25, 39)
TotalPhylumCounts_skin_gut
TotalPhylumCounts_skin_gut %>%
arrange("Body site", Abundance)
TotalPhylumCounts_skin_gut %>%
arrange("Body site", desc(Abundance))
TotalPhylumCounts_skin_gut %>%
arrange(desc("Body site"), desc(Abundance))
TotalPhylumCounts_skin_gut %>%
arrange(desc(c("Body site", Abundance)))
TotalPhylumCounts_skin_gut %>%
arrange(desc(("Body site", Abundance))
TotalPhylumCounts_skin_gut %>%
arrange(desc("Body site", Abundance))
TotalPhylumCounts_skin_gut %>%
arrange("Body site", desc(Abundance))
TotalPhylumCounts_skin_gut %>%
arrange("Body site", Abundance)
TotalPhylumCounts_skin_gut %>%
arrange("Body site") %>%
arrange(Abundance)
TotalPhylumCounts_Phylum_skin
saveRDS(TotalPhylumCounts_Phylum_skin, "data/TotalPhylumCounts_Phylum_skin.rds")
TotalPhylumCounts_Phylum_gut
saveRDS(TotalPhylumCounts_Phylum_gut, "data/TotalPhylumCounts_Phylum_gut.rds")
TotalPhylumCounts_Phylum_skin<-readRDS("data/TotalPhylumCounts_Phylum_skin.rds")
TotalPhylumCounts_Phylum_gut<-readRDS("data/TotalPhylumCounts_Phylum_gut.rds")
TotalPhylumCounts_skin_gut<-rbind(TotalPhylumCounts_Phylum_skin,TotalPhylumCounts_Phylum_gut)
TotalPhylumCounts_skin_gut
View(TotalPhylumCounts_skin_gut)
TotalPhylumCounts_skin_gut %>%
rename("Relative abundance (%)" = Abundance) %>%
select(!"Body site") %>%
select(1,3,2,4) %>%
kbl() %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
pack_rows("Skin", 1, 24) %>%
pack_rows("Gut", 25, 39)
View(TotalPhylumCounts_skin_gut)
TotalPhylumCounts_skin_gut %>%
rename("Relative abundance (%)" = Abundance) %>%
select(!"Body site") %>%
select(1,3,2,4) %>%
kbl() %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
pack_rows("Skin", 1, 30) %>%
pack_rows("Gut", 31, 55)
prev90_gut
prev90_gut %>% group_by(Phylum) %>% summarise(sum=sum(`Relative abundance (%)`)) %>%  arrange(desc(sum))
prev90_skin %>% group_by(Phylum) %>% summarise(sum=sum(`Relative abundance (%)`)) %>%  arrange(desc(sum)) # core phyla abundances
# Set output directory
output_dir<-"out"
# Load functions
source("scripts/Functions.R")
# Load packages
library(tidyverse)
library(patchwork)
library(RColorBrewer)
library(cowplot) #ggdraw
library(kableExtra)
library(phyloseq)
# Load phyloseq objects
ps1_s<-readRDS("data/ps1_s.rds")
ps1_g<-readRDS("data/ps1_g.rds")
ps1_s_g<-readRDS("data/ps1_s_g.rds")
TotalPhylumCounts_skin<-ps1_s %>%
psmelt() %>%
rename("Phylum" = "phylum") %>%
group_by(OTU, Phylum) %>%
summarise(TotalReads = sum(Abundance)) %>%
arrange(desc(TotalReads))
TotalPhylumCounts_Phylum_skin<-TotalPhylumCounts_skin %>%
group_by(Phylum) %>%
summarise(ASVs = length(unique(OTU)),
Reads = sum(TotalReads)) %>%
mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2),
"Body site" = "Skin") %>%
arrange(desc(Abundance))
nrow(TotalPhylumCounts_Phylum_skin)
saveRDS(TotalPhylumCounts_Phylum_skin, "data/TotalPhylumCounts_Phylum_skin.rds")
TotalPhylumCounts_Phylum_skin %>%
kbl(caption = "Total counts for each Phylum (Skin") %>%
kable_classic(full_width = F, html_font = "Cambria")
TotalPhylumCounts_gut<-ps1_g %>%
psmelt() %>%
rename("Phylum" = "phylum") %>%
group_by(OTU, Phylum) %>%
summarise(TotalReads = sum(Abundance)) %>%
arrange(desc(TotalReads))
TotalPhylumCounts_Phylum_gut<-TotalPhylumCounts_gut %>%
group_by(Phylum) %>%
summarise(ASVs = length(unique(OTU)), Reads = sum(TotalReads)) %>%
mutate(Abundance = round(((Reads / sum(Reads)) * 100), 2),
"Body site" = "Gut") %>%
arrange(desc(Abundance))
nrow(TotalPhylumCounts_Phylum_gut)
saveRDS(TotalPhylumCounts_Phylum_gut, "data/TotalPhylumCounts_Phylum_gut.rds")
TotalPhylumCounts_Phylum_gut %>%
kbl(caption = "Total counts for each Phylum (Gut") %>%
kable_classic(full_width = F, html_font = "Cambria")
#Core microbiota =shared ASVs among 90% of the individuals
#ASVs that are present in more than 90% of the samples (n=40), 0.9*40=36 => in more than 36 samples
# Skin
prev90_skin_vector<-apply(X = otu_table(ps1_s),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
prev90_skin<-data.frame(ASV=row.names(otu_table(ps1_s)),
Prevalence = prev90_skin_vector,
Abundance = taxa_sums(ps1_s), #taxa_sums = how many reads per ASV
tax_table(ps1_s))
row.names(prev90_skin)<-NULL
prev90_skin<-prev90_skin %>% filter(Prevalence>0.9*40) %>%
mutate(Rel_ab = round((Abundance/sum(Abundance))*100, digits = 2)) %>%
select(ASV, phylum, family, genus, species, Prevalence, Abundance, Rel_ab) %>%
arrange(desc(Prevalence)) %>%
rename("Phylum" = "phylum", "Genus"="genus","Family"="family",
"Species"="species", "Relative abundance (%)" = "Rel_ab")
nrow(prev90_skin) #136 ASVs
prev90_skin %>% group_by(Phylum) %>% summarise(sum=sum(`Relative abundance (%)`)) %>%  arrange(desc(sum)) # core phyla abundances
saveRDS(prev90_skin, "data/prev90_skin.rds")
prev90_skin %>%
kbl(caption = "Core skin microbiota found in 90% of individuals") %>%
kable_classic(full_width = F, html_font = "Cambria")
# Gut
prev90_gut_vector<-apply(X = otu_table(ps1_g),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
## add taxonomy and total read counts
prev90_gut<-data.frame(ASV=row.names(otu_table(ps1_g)),
Prevalence = prev90_gut_vector,
Abundance = taxa_sums(ps1_g), #taxa_sums = how many reads per ASV
tax_table(ps1_g))
row.names(prev90_gut)<-NULL
prev90_gut<-prev90_gut %>% filter(Prevalence>0.9*40) %>%
mutate(Rel_ab = round((Abundance/sum(Abundance))*100, digits = 2)) %>%
select(ASV, phylum, family, genus, species, Prevalence, Abundance, Rel_ab) %>%         arrange(desc(Prevalence)) %>%
rename("Phylum" = "phylum", "Genus"="genus","Family"="family",
"Species"="species", "Relative abundance (%)" = "Rel_ab")
row.names(prev90_gut)<-NULL
nrow(prev90_gut) # 64 ASVs
prev90_gut %>% group_by(Phylum) %>% summarise(sum=sum(`Relative abundance (%)`)) %>%  arrange(desc(sum)) # core phyla abundances
saveRDS(prev90_gut, "data/prev90_gut.rds")
prev90_gut %>%
kbl(caption = "Core gut microbiota found in 90% of individuals") %>%
kable_classic(full_width = F, html_font = "Cambria")
# Create abundance data frame
plot<-ps1_s_g %>%
tax_glom(taxrank = "phylum") %>%
transform_sample_counts(function(x) {x/sum(x)} ) %>%
psmelt() %>%
filter(Abundance > 0) %>%
arrange(desc(Abundance))
length(unique(plot$phylum)) #30
# Identify phyla below threshold (0.01) and name them as "Other"
plot<-plot %>%
mutate(phylum = ifelse(Abundance < 0.01 | Abundance == 0.01, "Other", phylum))
# Adjust the colors of the plot
length(unique(plot$phylum)) # Count unique phyla including "Other"
# Define the colors to use
pal1<-brewer.pal(n = 11, name = "BrBG")
pal1<-replace(pal1, pal1=="#F5F5F5", "#a6bddb")
pal2<-brewer.pal(n = 4, name = "PiYG")
pal2<-replace(pal2, pal2=="#4DAC26", "#e0f3db")
myColors<-c(pal1, pal2, "grey50")  # Add grey for "Other"
# Set the order of the phylum
phylum_order<-c("Acidobacteriota", "Actinomycetota", "Bacteroidota", "Campylobacterota","Chloroflexota", "Cyanobacteria", "Deferribacterota", "Deinococcota", "Thermodesulfobacteriota", "Bacillota", "Fusobacteriota", "Gemmatimonadota", "Patescibacteria", "Planctomycetota", "Pseudomonadota", "Other") # Add "Other"
# Set the colors with names
names(myColors)<-phylum_order
# Define the order of pair_ids
pairid_order<-paste0("P", 1:20)
plot$Pair_ID<-factor(plot$Pair_ID, levels = pairid_order)
# Figure Composition Plot
p1<-plot %>%
filter(Type_2 == "Skin") %>%
mutate(phylum = factor(phylum, levels = phylum_order)) %>%
ggplot(aes(x = Pair_ID, y = Abundance, fill = phylum)) +
facet_grid(Age ~ Colony, scales = "free_x") +
geom_bar(stat = "identity", width = 0.9, show.legend = TRUE) +
theme_classic() +
ggtitle("A) Skin") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.25), expand = c(0, 0)) +
theme(strip.background = element_blank(),
strip.text.x = element_text(size = 16, vjust = 0.1),
strip.text.y = element_blank(),
axis.line.y.left = element_line(size = 0.5, color = "black"),
axis.text.y.left = element_text(size = 14),
axis.ticks.y.left = element_line(size = 0.5, color = "black"),
axis.ticks.length = unit(0.2, "cm"),
axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 18),
plot.title = element_text(size = 18, vjust = -0.5),
panel.spacing.y = unit(1, "lines"),
panel.spacing.x = unit(0, "lines"),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16)) +
scale_fill_manual(values = myColors, name = "Phylum", drop = FALSE) +
ylab("Relative abundance")
p2<-plot %>%
filter(Type_2 == "Gut") %>%
mutate(Age = recode(Age, Mother = "Mothers", Pup = "Pups")) %>%
mutate(phylum = factor(phylum, levels = phylum_order)) %>%
ggplot(aes(x = Pair_ID, y = Abundance, fill = phylum)) +
facet_grid(Age ~ Colony, scales = "free_x") +
geom_bar(stat = "identity", width = 0.9, show.legend = FALSE) +
theme_classic() +
ggtitle("B) Gut") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.25), expand = c(0, 0)) +
theme(strip.background = element_blank(),
strip.text.x = element_text(size = 16, vjust = 0.1),
strip.text.y = element_text(size = 16),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size = 18, vjust = -0.5),
panel.spacing.y = unit(1, "lines"),  # High spacing between top and bottom panels
panel.spacing.x = unit(0, "lines"),  # No spacing between left and right panels
legend.title = element_text(size = 16)) +
scale_fill_manual(values = myColors, name = "Phylum", drop = FALSE) +
ylab("")
# Combine plots with patchwork
combined_plot<-p1 + p2 + plot_layout(guides = "collect")
# Draw x title with some background
x_title<-ggdraw() +
draw_label("Mother-pup pair", size = 18, hjust = 1.3, y = 1.2) +
theme(panel.background = element_rect(fill = "White", color = "White"))
# Plot it
plot_grid(combined_plot, x_title, nrow = 2, rel_heights = c(4, 0.1))
# Save the figure
ggsave("Figure_02_Composition_phylum_001.pdf", path = output_dir,
width = 26, height = 17, units = "cm", dpi = 300, device = cairo_pdf)
ggsave("Figure_02_Composition_phylum_001.png", path = output_dir,
width = 26, height = 17, units = "cm", dpi = 300)
setwd("C:/Fur seals/Publications/Botsidou et al 2025_Skin and gut AFS/scripts")
setwd("C:/Fur seals/Publications/Botsidou et al 2025_Skin and gut AFS/scripts")
setwd("C:/Fur seals/Publications/Botsidou et al 2025_Skin and gut AFS/scripts")
setwd("C:/Fur seals/Publications/Botsidou et al 2025_Skin and gut AFS/scripts")
setwd("C:/Fur seals/Publications/Botsidou et al 2025_Skin and gut AFS/scripts")
knitr::include_graphics("../out/Figure_S1_rarefaction_curves_skin_gut.png")
meta<-read.csv("data/meta.csv", header = TRUE)
meta %>% filter(Type_2!="Control")
View(meta)
meta<-read.csv("data/meta.csv", header = TRUE)
samples_table<-meta %>% filter(Type_2!="Control") %>% select(c(3,4,6:ncol(meta))) %>%
rename(Sample_ID = BAS_ID, Body_site = Type_1) %>% arrange(Sample_ID)
View(samples_table)
controls_table<-meta %>% filter(Type_2 == "Control") %>%
select(4) %>% rename(Sample_ID = Type_1) %>%
mutate(Sample_ID = case_when(Sample_ID == "FWB" ~ "FWB soil",
Sample_ID == "SSB" ~ "SSB soil",
TRUE ~ Sample_ID))
samples_table %>% bind_rows(controls_table) %>%
mutate(Body_site = case_when(is.na(Body_site) ~ "Control",
TRUE ~ Body_site)) %>%
kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
meta<-read.csv("data/meta.csv", header = TRUE)
samples_table<-meta %>% filter(Type_2!="Control") %>% select(c(3,4,6:8,10,15:18)) %>%
rename(Sample_ID = BAS_ID, Body_site = Type_1) %>% arrange(Sample_ID)
controls_table<-meta %>% filter(Type_2 == "Control") %>%
select(4) %>% rename(Sample_ID = Type_1) %>%
mutate(Sample_ID = case_when(Sample_ID == "FWB" ~ "FWB soil",
Sample_ID == "SSB" ~ "SSB soil",
TRUE ~ Sample_ID))
samples_table %>% bind_rows(controls_table) %>%
mutate(Body_site = case_when(is.na(Body_site) ~ "Control",
TRUE ~ Body_site)) %>%
kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
meta %>% filter(Type_2!="Control") %>% select(c(3,4,6:8,10)) %>%
rename(Sample_ID = BAS_ID, Body_site = Type_1) %>% arrange(Sample_ID)
meta %>% filter(Type_2!="Control")
# load libraries
library(corncob)
library(extrafont) #needed to import fonts from my system
library(tidyverse)
library(patchwork)
library(phyloseq)
meta %>% filter(Type_2!="Control")
samples_table<-meta %>% filter(Type_2!="Control")
View(samples_table)
# load libraries
library(corncob)
library(extrafont) #needed to import fonts from my system
library(tidyverse)
library(patchwork)
library(phyloseq)
